<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Main" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ibatis.apache.org/mapping">
  <statements>

    <!--공사대장-->
    <select id ="SelectWttConsMaList" parameterClass="Hashtable" resultClass ="Hashtable">
      /* selectWttConsMaList 공사대장 목록*/

      WITH C AS (
      SELECT COUNT(1) AS ROWCNT
      FROM WTT_CONS_MA A
      LEFT JOIN INFOUSER.CD_DTL_INFO C ON C.MST_CD = (SELECT MST_CD FROM INFOUSER.CD_MST_INFO WHERE ETC = 'CNT_CDE') AND C.DTL_CD = A.CNT_CDE
      LEFT JOIN INFOUSER.CD_DTL_INFO C2 ON C2.MST_CD = (SELECT MST_CD FROM INFOUSER.CD_MST_INFO WHERE ETC = 'CTT_CDE') AND C2.DTL_CD = A.CTT_CDE

      WHERE 1=1
      <isNotEmpty prepend="AND" property="CNT_CDE">
        A.CNT_CDE like #CNT_CDE# || '%'
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="CNT_NUM">
        upper(A.CNT_NUM ) like '%' || upper(#CNT_NUM#) || '%'
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="CNT_NAM">
        upper(A.CNT_NAM ) like '%' || upper(#CNT_NAM#)   || '%'
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="TCT_AMT_FROM">
        A.TCT_AMT <![CDATA[>=]]> #TCT_AMT_FROM#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="TCT_AMT_TO">
        A.TCT_AMT <![CDATA[<=]]> #TCT_AMT_TO#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="BEG_YMD_FROM">
        A.BEG_YMD <![CDATA[>=]]> #BEG_YMD_FROM#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="BEG_YMD_TO">
        A.BEG_YMD <![CDATA[<=]]> #BEG_YMD_TO#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="FNS_YMD_FROM">
        A.FNS_YMD <![CDATA[>=]]> #FNS_YMD_FROM#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="FNS_YMD_TO">
        A.FNS_YMD <![CDATA[<=]]> #FNS_YMD_TO#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="CTT_CDE">
        A.CTT_CDE like #CTT_CDE# || '%'
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="CNT_LOC">
        upper(A.CNT_LOC ) like '%' || upper(#CNT_LOC#)   || '%'
      </isNotEmpty>

      )

      SELECT C.ROWCNT, X.*  FROM (

      SELECT ROW_NUMBER() OVER( ORDER BY NVL(A.CRE_YMD,'10000101') desc, A.CNT_NUM DESC ) AS RN
      , A.CNT_NUM
      , A.CNT_NAM
      , A.CNT_LOC
      , A.CNT_CDE, C.NM AS CNT_CDE_NAM
      , A.DSN_NAM
      , A.DSN_AMT
      , A.CTT_CDE, C2.NM AS CTT_NAM

      , A.DPC_AMT
      , A.DGV_AMT
      , A.DET_AMT
      , A.NAT_AMT
      , A.COU_AMT
      , A.CIT_AMT
      , A.BND_AMT
      , A.CSS_AMT
      , A.KWN_EXP
      , A.HNG_EXP
      , A.SHN_EXP
      , A.MOK_EXP
      , A.BID_YMD
      , A.EST_AMT
      , A.CTT_YMD
      , A.TCT_AMT
      , A.CPC_AMT
      , A.CGV_AMT
      , A.CET_AMT
      , A.GCN_NAM
      , A.POC_NAM
      , A.GCN_ADR
      , A.GCN_TEL
      , A.BEG_YMD
      , A.FNS_YMD
      , A.SVS_NSM
      , A.RFN_YMD
      , A.FCH_YMD
      , A.FCH_NAM
      , A.CNT_DES
      , A.GVR_DES
      , A.ATT_USR
      , A.ATT_TIM
      FROM WTT_CONS_MA A
      LEFT JOIN INFOUSER.CD_DTL_INFO C ON C.MST_CD = (SELECT MST_CD FROM INFOUSER.CD_MST_INFO WHERE ETC = 'CNT_CDE') AND C.DTL_CD = A.CNT_CDE
      LEFT JOIN INFOUSER.CD_DTL_INFO C2 ON C2.MST_CD = (SELECT MST_CD FROM INFOUSER.CD_MST_INFO WHERE ETC = 'CTT_CDE') AND C2.DTL_CD = A.CTT_CDE

      WHERE 1=1
      <isNotEmpty prepend="AND" property="CNT_CDE">
        A.CNT_CDE like #CNT_CDE# || '%'
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="CNT_NUM">
        upper(A.CNT_NUM ) like '%' || upper(#CNT_NUM#)   || '%'
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="CNT_NAM">
        upper(A.CNT_NAM ) like '%' || upper(#CNT_NAM#) || '%'
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="TCT_AMT_FROM">
        decode(A.TCT_AMT, NULL, A.TCT_AMT, 0) <![CDATA[>=]]> #TCT_AMT_FROM#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="TCT_AMT_TO">
        decode(A.TCT_AMT, NULL, A.TCT_AMT, 0) <![CDATA[<=]]> #TCT_AMT_TO#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="BEG_YMD_FROM">
        A.BEG_YMD <![CDATA[>=]]> #BEG_YMD_FROM#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="BEG_YMD_TO">
        A.BEG_YMD <![CDATA[<=]]> #BEG_YMD_TO#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="FNS_YMD_FROM">
        A.FNS_YMD <![CDATA[>=]]> #FNS_YMD_FROM#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="FNS_YMD_TO">
        A.FNS_YMD <![CDATA[<=]]> #FNS_YMD_TO#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="CTT_CDE">
        A.CTT_CDE like #CTT_CDE# || '%'
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="CNT_LOC">
        upper(A.CNT_LOC ) like '%' || upper(#CNT_LOC#)   || '%'
      </isNotEmpty>



      ) X JOIN C ON 1=1
      WHERE RN &lt;= ($page$+1) * $rows$
      AND RN &gt;= ($page$) * $rows$ + 1

    </select>


    <!--상수공사대장 중복체크-->
    <select id ="SelectWttConsMaDup" parameterClass="Hashtable" resultClass ="Hashtable">
      SELECT
      A.CNT_NUM
      FROM
      WTT_CONS_MA A
      WHERE 1 = 1
      AND A.CNT_NUM = #CNT_NUM#
    </select>


    <!--공사대장상세-->
    <select id ="SelectWttConsMaDtl" parameterClass="Hashtable" resultClass ="GTI.WFMS.Modules.Cnst.Model.CnstDtl">
      /* SelectWttConsMaDtl 공사대장 상세*/

      SELECT  A.CNT_NUM
      , A.CNT_NAM
      , A.CNT_LOC
      , A.CNT_CDE, C.NM AS CNT_CDE_NAM
      , A.DSN_NAM
      , A.DSN_AMT
      , A.CTT_CDE, C2.NM AS CTT_NAM

      , A.DPC_AMT
      , A.DGV_AMT
      , A.DET_AMT
      , A.NAT_AMT
      , A.COU_AMT
      , A.CIT_AMT
      , A.BND_AMT
      , A.CSS_AMT
      , A.KWN_EXP
      , A.HNG_EXP
      , A.SHN_EXP
      , A.MOK_EXP
      , A.BID_YMD
      , A.EST_AMT
      , A.CTT_YMD
      , A.TCT_AMT
      , A.CPC_AMT
      , A.CGV_AMT
      , A.CET_AMT
      , A.GCN_NAM
      , A.POC_NAM
      , A.GCN_ADR
      , A.GCN_TEL
      , A.BEG_YMD
      , A.FNS_YMD
      , A.SVS_NSM
      , A.RFN_YMD
      , A.FCH_YMD
      , A.FCH_NAM
      , A.CNT_DES
      , A.GVR_DES
      , A.ATT_USR
      , A.ATT_TIM
      FROM WTT_CONS_MA A
      LEFT JOIN INFOUSER.CD_DTL_INFO C ON C.MST_CD = (SELECT MST_CD FROM INFOUSER.CD_MST_INFO WHERE ETC = 'CNT_CDE') AND C.DTL_CD = A.CNT_CDE
      LEFT JOIN INFOUSER.CD_DTL_INFO C2 ON C2.MST_CD = (SELECT MST_CD FROM INFOUSER.CD_MST_INFO WHERE ETC = 'CTT_CDE') AND C2.DTL_CD = A.CTT_CDE

      WHERE 1=1
      AND upper(A.CNT_NUM ) like upper(#CNT_NUM#)

    </select>



    <!--공사대장상세저장-->
    <update id="updateCnstMngDtl" parameterClass="GTI.WFMS.Modules.Cnst.Model.CnstDtl">
      UPDATE WTT_CONS_MA
      SET
      CNT_CDE = 	#CNT_CDE#
      , DSN_NAM = 	#DSN_NAM#
      , CNT_LOC = 	#CNT_LOC#
      , DGV_AMT = 	#DGV_AMT#
      , DET_AMT = 	#DET_AMT#
      , CNT_NAM = 	#CNT_NAM#
      , DSN_AMT = 	#DSN_AMT#
      , DPC_AMT = 	#DPC_AMT#
      , SVS_NSM = 	#SVS_NSM#
      , BEG_YMD = 	#BEG_YMD#
      , FCH_YMD = 	#FCH_YMD#
      , FCH_NAM = 	#FCH_NAM#
      , FNS_YMD = 	#FNS_YMD#
      , RFN_YMD = 	#RFN_YMD#
      , GVR_DES = 	#GVR_DES#
      , CNT_DES = 	#CNT_DES#
      , BID_YMD = 	#BID_YMD#
      , CTT_YMD = 	#CTT_YMD#
      , EST_AMT = 	#EST_AMT#
      , CTT_CDE = 	#CTT_CDE#
      , TCT_AMT = 	#TCT_AMT#
      , CET_AMT = 	#CET_AMT#
      , CPC_AMT = 	#CPC_AMT#
      , CGV_AMT = 	#CGV_AMT#
      , NAT_AMT = 	#NAT_AMT#
      , GCN_NAM = 	#GCN_NAM#
      , KWN_EXP = 	#KWN_EXP#
      , COU_AMT = 	#COU_AMT#
      , POC_NAM = 	#POC_NAM#
      , HNG_EXP = 	#HNG_EXP#
      , CIT_AMT = 	#CIT_AMT#
      , GCN_ADR = 	#GCN_ADR#
      , SHN_EXP = 	#SHN_EXP#
      , BND_AMT = 	#BND_AMT#
      , GCN_TEL = 	#GCN_TEL#
      , MOK_EXP = 	#MOK_EXP#
      , CSS_AMT = 	#CSS_AMT#
      , UPD_YMD = 	SYSDATE
      , UPD_USR = 	#ID#

      WHERE CNT_NUM = #CNT_NUM#

    </update>

    
    <!--공사대장 추가-->
    <update id="insertCnstMngDtl" parameterClass="GTI.WFMS.Modules.Cnst.Model.CnstDtl">
      
			INSERT INTO WTT_CONS_MA 
				( CNT_NUM, 
				  CNT_NAM, 
				  CNT_LOC, 
				  CNT_CDE, 
				  DSN_NAM, 
				  DSN_AMT, 
				  DPC_AMT, 
				  DGV_AMT, 
				  DET_AMT, 
				  NAT_AMT, 
				  COU_AMT, 
				  CIT_AMT, 
				  BND_AMT, 
				  CSS_AMT, 
				  KWN_EXP, 
				  HNG_EXP, 
				  SHN_EXP, 
				  MOK_EXP, 
				  BID_YMD, 
				  EST_AMT, 
				  CTT_YMD, 
				  CTT_CDE, 
				  TCT_AMT, 
				  CPC_AMT, 
				  CGV_AMT, 
				  CET_AMT, 
				  GCN_NAM, 
				  POC_NAM, 
				  GCN_ADR, 
				  GCN_TEL, 
				  BEG_YMD, 
				  FNS_YMD, 
				  SVS_NSM, 
				  RFN_YMD, 
				  FCH_YMD, 
				  FCH_NAM, 
				  CNT_DES, 
				  GVR_DES, 
				  ATT_USR, 
				  ATT_TIM
				  ,CRE_YMD
				  ,CRE_USR
				  
				)
			VALUES 
				( 
				  #CNT_NUM#, 
				  #CNT_NAM#, 
				  #CNT_LOC#, 
				  #CNT_CDE#, 
				  #DSN_NAM#, 
				  #DSN_AMT#, 
				  #DPC_AMT#, 
				  #DGV_AMT#, 
				  #DET_AMT#, 
				  #NAT_AMT#, 
				  #COU_AMT#, 
				  #CIT_AMT#, 
				  #BND_AMT#, 
				  #CSS_AMT#, 
				  #KWN_EXP#, 
				  #HNG_EXP#, 
				  #SHN_EXP#, 
				  #MOK_EXP#,
				  #BID_YMD#, 
				  #EST_AMT#, 
				  #CTT_YMD#, 
				  #CTT_CDE#, 
				  #TCT_AMT#, 
				  #CPC_AMT#, 
				  #CGV_AMT#, 
				  #CET_AMT#, 
				  #GCN_NAM#, 
				  #POC_NAM#, 
				  #GCN_ADR#, 
				  #GCN_TEL#,
				  #BEG_YMD#, 
				  #FNS_YMD#,
				  #SVS_NSM#, 
				  #RFN_YMD#,
				  #FCH_YMD#,
				  #FCH_NAM#, 
				  #CNT_DES#, 
				  #GVR_DES#, 
				  #ATT_USR#, 
				  #ATT_TIM#
				  ,SYSDATE
				  ,#ID#
				)    
    </update>


    <!--공사대장상세삭제-->
    <update id="deleteCnstMngDtl" parameterClass="GTI.WFMS.Modules.Cnst.Model.CnstDtl">
      DELETE FROM WTT_CONS_MA WHERE CNT_NUM = #CNT_NUM#
    </update>

      <!-- 공사비지급내역 목록	 -->
    <select id ="SelectWttCostDtList" parameterClass="Hashtable" resultClass="GTI.WFMS.Modules.Cnst.Model.WttCostDt">
      SELECT ROWNUM AS RNO, M.*
      FROM (
      SELECT COST_SEQ
      , CNT_NUM
      , PAY_NUM
      , PTY_CDE
      , (SELECT NM FROM INFOUSER.CD_DTL_INFO WHERE MST_CD = '250066' AND DTL_CD = PTY_CDE ) AS PTY_NAM
      , NVL(PAY_YMD, '') AS PAY_YMD
      , PAY_YMD as PAY_YMD_FMT
      , PAY_AMT
      , NULL AS CHK
      FROM WTT_COST_DT
      WHERE 1=1
      <isNotEmpty prepend="AND">
				        CNT_NUM = #CNT_NUM#
			        </isNotEmpty>

      ORDER BY COST_SEQ
      ) M
    </select>

    <!-- 공사비지급내역 상세저장 -->
    <update id="SaveWttCostDt" parameterClass="Hashtable">
      MERGE INTO WTT_COST_DT
      USING DUAL ON ( CNT_NUM=#CNT_NUM# AND COST_SEQ=#COST_SEQ#  )

      WHEN MATCHED THEN

      UPDATE
      SET  PTY_CDE=#PTY_CDE#
      , PAY_YMD = #PAY_YMD#
      , PAY_AMT=#PAY_AMT#

      WHEN NOT MATCHED THEN
      INSERT
      ( CNT_NUM
      , PAY_NUM
      , PTY_CDE
      , PAY_YMD
      , PAY_AMT
      , COST_SEQ

      )
      VALUES ( #CNT_NUM#
      , (SELECT NVL(MAX(PAY_NUM),0)+1 as PAY_NUM FROM WTT_COST_DT)
      , #PTY_CDE#
      , #PAY_YMD#
      , #PAY_AMT#
      , (SELECT NVL(MAX(COST_SEQ),0)+1 as COST_SEQ FROM WTT_COST_DT)
      )
    </update>

    <!-- 공사비지급내역 상세저장2 -->
    <update id="SaveWttCostDt2" parameterClass="GTI.WFMS.Modules.Cnst.Model.WttCostDt">
      MERGE INTO WTT_COST_DT
      USING DUAL ON ( CNT_NUM=#CNT_NUM# AND COST_SEQ=#COST_SEQ#  )

      WHEN MATCHED THEN

      UPDATE
      SET  PTY_CDE=#PTY_CDE#
      , PAY_YMD = #PAY_YMD#
      , PAY_AMT=#PAY_AMT#

      WHEN NOT MATCHED THEN
      INSERT
      ( CNT_NUM
      , PAY_NUM
      , PTY_CDE
      , PAY_YMD
      , PAY_AMT
      , COST_SEQ

      )
      VALUES ( #CNT_NUM#
      , (SELECT NVL(MAX(PAY_NUM),0)+1 as PAY_NUM FROM WTT_COST_DT)
      , #PTY_CDE#
      , #PAY_YMD#
      , #PAY_AMT#
      , (SELECT NVL(MAX(COST_SEQ),0)+1 as COST_SEQ FROM WTT_COST_DT)
      )
    </update>
    <update id="DeleteWttCostDt"  parameterClass="Hashtable">
      DELETE  FROM WTT_COST_DT
      WHERE CNT_NUM=#CNT_NUM#
      <isNotEmpty property="COST_SEQ">
        AND COST_SEQ=#COST_SEQ#
      </isNotEmpty>
    </update>


    <!-- 설정변경내역 목록	 -->
    <select id ="SelectWttChngDtList" parameterClass="Hashtable" resultClass="GTI.WFMS.Modules.Cnst.Model.WttChngDt">
      SELECT ROWNUM AS RNO, M.*
      FROM ( SELECT CNT_NUM
      , CHNG_SEQ
      , CHG_NUM
      , CHG_YMD
      , CHG_YMD as CHG_YMD_FMT
      , INC_AMT
      , IGV_AMT
      , CHG_AMT
      , CHG_DES
      , CGV_DES
      , ATT_USR
      , ATT_TIM
      , ATT_TIM as ATT_TIM_FMT
      , NULL AS CHK
      FROM WTT_CHNG_DT
      WHERE 1=1
      <isNotEmpty prepend="AND">
				          CNT_NUM = #CNT_NUM#
			          </isNotEmpty>

      ORDER BY CHNG_SEQ
      ) M
    </select>

    <!-- 설계변경내역 상세저장	 -->
    <update id="SaveWttChngDt"  parameterClass="Hashtable">
      MERGE INTO WTT_CHNG_DT
      USING DUAL ON ( CNT_NUM=#CNT_NUM# AND CHNG_SEQ=#CHNG_SEQ# )

      WHEN MATCHED THEN
      UPDATE
      SET
      CHG_YMD=#CHG_YMD#
      , INC_AMT=#INC_AMT#
      , IGV_AMT=#IGV_AMT#
      , CHG_AMT=#CHG_AMT#
      , CHG_DES=#CHG_DES#
      , CGV_DES=#CGV_DES#
      , ATT_USR=#ID#
      , ATT_TIM=to_char(sysdate, 'yyyyMMdd')

      WHEN NOT MATCHED THEN
      INSERT
      ( CHNG_SEQ
      , CNT_NUM
      , CHG_NUM
      , CHG_YMD
      , INC_AMT
      , IGV_AMT
      , CHG_AMT
      , CHG_DES
      , CGV_DES
      , ATT_USR
      , ATT_TIM )
      VALUES (
      (SELECT NVL(MAX(CHNG_SEQ),0)+1 as CHNG_SEQ FROM WTT_CHNG_DT)
      , #CNT_NUM#
      , (SELECT NVL(MAX(CHG_NUM),0)+1 as CHG_NUM FROM WTT_CHNG_DT)
      , #CHG_YMD#
      , #INC_AMT#
      , #IGV_AMT#
      , #CHG_AMT#
      , #CHG_DES#
      , #CGV_DES#
      , #ID#
      , to_char(sysdate, 'yyyyMMdd')
      )
    </update>
    <!-- 설계변경내역 상세저장2	 -->
    <update id="SaveWttChngDt2"  parameterClass="GTI.WFMS.Modules.Cnst.Model.WttChngDt">
      MERGE INTO WTT_CHNG_DT
      USING DUAL ON ( CNT_NUM=#CNT_NUM# AND CHNG_SEQ=#CHNG_SEQ# )

      WHEN MATCHED THEN
      UPDATE
      SET
      CHG_YMD=#CHG_YMD#
      , INC_AMT=#INC_AMT#
      , IGV_AMT=#IGV_AMT#
      , CHG_AMT=#CHG_AMT#
      , CHG_DES=#CHG_DES#
      , CGV_DES=#CGV_DES#
      , ATT_USR=#ID#
      , ATT_TIM=to_char(sysdate, 'yyyyMMdd')

      WHEN NOT MATCHED THEN
      INSERT
      ( CHNG_SEQ
      , CNT_NUM
      , CHG_NUM
      , CHG_YMD
      , INC_AMT
      , IGV_AMT
      , CHG_AMT
      , CHG_DES
      , CGV_DES
      , ATT_USR
      , ATT_TIM )
      VALUES (
      (SELECT NVL(MAX(CHNG_SEQ),0)+1 as CHNG_SEQ FROM WTT_CHNG_DT)
      , #CNT_NUM#
      , (SELECT NVL(MAX(CHG_NUM),0)+1 as CHG_NUM FROM WTT_CHNG_DT)
      , #CHG_YMD#
      , #INC_AMT#
      , #IGV_AMT#
      , #CHG_AMT#
      , #CHG_DES#
      , #CGV_DES#
      , #ID#
      , to_char(sysdate, 'yyyyMMdd')
      )
    </update>

    <update id="DeleteWttChngDt"  parameterClass="Hashtable">
      DELETE  FROM WTT_CHNG_DT
      WHERE CNT_NUM=#CNT_NUM#
      <isNotEmpty property="CHNG_SEQ">
        AND CHNG_SEQ=#CHNG_SEQ#
      </isNotEmpty>
    </update>


    <!-- 공사하도급 목록	 -->
    <select id ="SelectWttSubcDtList" parameterClass="Hashtable" resultClass ="Hashtable">
      SELECT	CNT_NUM, SUBC_SEQ
      , SUB_NUM
      , SUB_NAM
      , PSB_NAM
      , SUB_ADR
      , SUB_TEL
      , NULL AS CHK
      FROM WTT_SUBC_DT
      WHERE 1=1
      <isNotEmpty prepend="AND">
        CNT_NUM = #CNT_NUM#
      </isNotEmpty>
      ORDER BY SUB_NUM DESC
    </select>

    <!-- 공사하도급 목록	 -->
    <select id ="SelectWttSubcDtList2" parameterClass="Hashtable" resultClass ="GTI.WFMS.Modules.Cnst.Model.WttSubcDt">
     SELECT ROWNUM AS RNO, M.*
       FROM (  SELECT NULL AS CHK
                    , CNT_NUM
                    , SUBC_SEQ
                    , SUB_NUM
                    , SUB_NAM
                    , PSB_NAM
                    , SUB_ADR
                    , SUB_TEL
              FROM WTT_SUBC_DT
              WHERE 1=1
              <isNotEmpty prepend="AND">
                CNT_NUM = #CNT_NUM#
              </isNotEmpty>
      ORDER BY SUBC_SEQ
      ) M
    </select>

    <update id="DeleteWttSubcDt"  parameterClass="Hashtable">
      DELETE  FROM WTT_SUBC_DT
      WHERE CNT_NUM=#CNT_NUM#
      <isNotEmpty property="SUBC_SEQ">
        AND SUBC_SEQ=#SUBC_SEQ#
      </isNotEmpty>
    </update>

    <!-- 공사하도급 저장		 -->
    <update id="SaveWttSubcDt"  parameterClass="Hashtable">
      MERGE INTO WTT_SUBC_DT
      USING DUAL ON ( CNT_NUM=#CNT_NUM# AND SUBC_SEQ=#SUBC_SEQ# )

      WHEN MATCHED THEN
      UPDATE
      SET   SUB_NAM=#SUB_NAM#
      , PSB_NAM=#PSB_NAM#
      , SUB_ADR=#SUB_ADR#
      , SUB_TEL=#SUB_TEL#

      WHEN NOT MATCHED THEN
      INSERT
      ( CNT_NUM
      , SUBC_SEQ
      , SUB_NUM
      , SUB_NAM
      , PSB_NAM
      , SUB_ADR
      , SUB_TEL )
      VALUES ( #CNT_NUM#
      , (SELECT NVL(MAX(SUBC_SEQ),0)+1 as SUBC_SEQ FROM WTT_SUBC_DT)
      , (SELECT NVL(MAX(SUB_NUM),0)+1 AS SUB_NUM FROM WTT_SUBC_DT)
      , #SUB_NAM#
      , #PSB_NAM#
      , #SUB_ADR#
      , #SUB_TEL# )
    </update>




    <!-- 하자보수 목록	 -->
    <select id ="SelectWttFlawDtList" parameterClass="Hashtable" resultClass ="GTI.WFMS.Modules.Cnst.Model.WttFlawDt">
      SELECT ROWNUM AS RNO, M.*
      FROM (  SELECT CNT_NUM, FLAW_SEQ
      , RPR_NUM
      , FLA_YMD
      , FLA_YMD as FLA_YMD_FMT
      , RPR_YMD
      , RPR_YMD as RPR_YMD_FMT
      , RPR_DES
      , NULL AS CHK
      FROM WTT_FLAW_DT
      WHERE 1=1
      <isNotEmpty prepend="AND">
			        CNT_NUM = #CNT_NUM#
		        </isNotEmpty>
      ORDER BY FLAW_SEQ
      ) M
    </select>

    <update id="DeleteWttFlawDt"  parameterClass="Hashtable">
      DELETE  FROM WTT_FLAW_DT
      WHERE CNT_NUM=#CNT_NUM#
      <isNotEmpty property="FLAW_SEQ">
        AND FLAW_SEQ=#FLAW_SEQ#
      </isNotEmpty>
    </update>


    <!-- 하자보수그리드 저장	 -->
    <update id="SaveWttFlawDt" parameterClass="Hashtable">
      MERGE INTO WTT_FLAW_DT
      USING DUAL ON ( CNT_NUM=#CNT_NUM# AND FLAW_SEQ=#FLAW_SEQ# )

      WHEN MATCHED THEN
      UPDATE
      SET
      FLA_YMD=#FLA_YMD#
      , RPR_YMD=#RPR_YMD#
      , RPR_DES=#RPR_DES#

      WHEN NOT MATCHED THEN
      INSERT
      ( CNT_NUM
      , RPR_NUM
      , FLA_YMD
      , RPR_YMD
      , RPR_DES
      , FLAW_SEQ )
      VALUES ( #CNT_NUM#
      , (SELECT nvl(MAX(RPR_NUM),0)+1 as RPR_NUM FROM WTT_FLAW_DT)
      , #FLA_YMD#
      , #RPR_YMD#
      , #RPR_DES#
      , (SELECT NVL(MAX(FLAW_SEQ),0)+1 as FLAW_SEQ FROM WTT_FLAW_DT) )
    </update>
    <!-- 하자보수그리드 저장2	 -->
    <update id="SaveWttFlawDt2" parameterClass="GTI.WFMS.Modules.Cnst.Model.WttFlawDt">
      MERGE INTO WTT_FLAW_DT
      USING DUAL ON ( CNT_NUM=#CNT_NUM# AND FLAW_SEQ=#FLAW_SEQ# )

      WHEN MATCHED THEN
      UPDATE
      SET
      FLA_YMD=#FLA_YMD#
      , RPR_YMD=#RPR_YMD#
      , RPR_DES=#RPR_DES#

      WHEN NOT MATCHED THEN
      INSERT
      ( CNT_NUM
      , RPR_NUM
      , FLA_YMD
      , RPR_YMD
      , RPR_DES
      , FLAW_SEQ )
      VALUES ( #CNT_NUM#
      , (SELECT nvl(MAX(RPR_NUM),0)+1 as RPR_NUM FROM WTT_FLAW_DT)
      , #FLA_YMD#
      , #RPR_YMD#
      , #RPR_DES#
      , (SELECT NVL(MAX(FLAW_SEQ),0)+1 as FLAW_SEQ FROM WTT_FLAW_DT) )
    </update>








    <!--급수전대장-->
    <select id ="SelectWttSplyMaList" parameterClass="Hashtable" resultClass ="Hashtable">

      WITH C AS (
      SELECT COUNT(1) AS ROWCNT
      FROM WTT_SPLY_MA A
      LEFT JOIN INFOFMS.CMT_ADAR_MA H ON A.HJD_CDE = H.HJD_CDE

      WHERE 1=1
      <isNotEmpty prepend="AND" property="CNT_NUM">
        upper(A.CNT_NUM ) like '%' || upper(#CNT_NUM#) || '%'
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="HJD_CDE">
        A.HJD_CDE like #HJD_CDE# || '%'
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="BEG_YMD_FROM">
        A.BEG_YMD <![CDATA[>=]]> #BEG_YMD_FROM#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="BEG_YMD_TO">
        A.BEG_YMD <![CDATA[<=]]> #BEG_YMD_TO#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="FNS_YMD_FROM">
        A.FNS_YMD <![CDATA[>=]]> #FNS_YMD_FROM#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="FNS_YMD_TO">
        A.FNS_YMD <![CDATA[<=]]> #FNS_YMD_TO#
      </isNotEmpty>

      )

      SELECT C.ROWCNT, X.*  FROM (

      SELECT ROW_NUMBER() OVER( ORDER BY NVL(A.CRE_YMD,'10000101') desc, A.CNT_NUM DESC ) AS RN
      , A.CNT_NUM
      , A.HJD_CDE, H.HJD_NAM
      , A.BEG_YMD
      , A.FNS_YMD
      , A.GVR_AMT
      , A.PRV_AMT
      , A.TAX_AMT
      , A.ROR_AMT
      , A.DEF_AMT
      , A.GFE_AMT
      , A.FFE_AMT
      , A.DIV_AMT
      , A.ETC_AMT
      , A.TOT_AMT
      , A.RCP_YMD
      , A.OPR_NAM
      , A.SVS_NAM
      , A.FNS_NAM
      , A.RCV_NUM
      , A.DFE_AMT

      FROM WTT_SPLY_MA A
      LEFT JOIN INFOFMS.CMT_ADAR_MA H ON A.HJD_CDE = H.HJD_CDE

      WHERE 1=1
      <isNotEmpty prepend="AND" property="CNT_NUM">
        upper(A.CNT_NUM ) like '%' || upper(#CNT_NUM#)   || '%'
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="HJD_CDE">
        A.HJD_CDE like #HJD_CDE# || '%'
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="BEG_YMD_FROM">
        A.BEG_YMD <![CDATA[>=]]> #BEG_YMD_FROM#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="BEG_YMD_TO">
        A.BEG_YMD <![CDATA[<=]]> #BEG_YMD_TO#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="FNS_YMD_FROM">
        A.FNS_YMD <![CDATA[>=]]> #FNS_YMD_FROM#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="FNS_YMD_TO">
        A.FNS_YMD <![CDATA[<=]]> #FNS_YMD_TO#
      </isNotEmpty>





      ) X JOIN C ON 1=1
      WHERE RN &lt;= ($page$+1) * $rows$
      AND RN &gt;= ($page$) * $rows$ + 1

    </select>


    <!--급수전대장 상세-->
    <select id ="SelectWttSplyMaDtl" parameterClass="Hashtable" resultClass ="GTI.WFMS.Modules.Cnst.Model.SplyDtl">
      SELECT
      A.CNT_NUM
      , A.HJD_CDE
      , ( SELECT HJD_NAM FROM CMT_ADAR_MA WHERE HJD_CDE = A.HJD_CDE ) AS HJD_NAM
      , A.BEG_YMD
      , A.FNS_YMD
      , A.GVR_AMT
      , A.PRV_AMT
      , A.TAX_AMT
      , A.ROR_AMT
      , A.DEF_AMT
      , A.GFE_AMT
      , A.FFE_AMT
      , A.DIV_AMT
      , A.ETC_AMT
      , A.TOT_AMT
      , A.RCP_YMD
      , A.OPR_NAM
      , A.SVS_NAM
      , A.FNS_NAM
      , A.RCV_NUM
      , A.DFE_AMT
      , A.FCH_NAM

      FROM
      WTT_SPLY_MA A
      WHERE 1 = 1
      AND A.CNT_NUM = #CNT_NUM#
    </select>

    <!--급수전대장 중복체크-->
    <select id ="SelectWttSplyMaDup" parameterClass="Hashtable" resultClass ="Hashtable">
      SELECT
      A.CNT_NUM
      FROM
      WTT_SPLY_MA A
      WHERE 1 = 1
      AND A.CNT_NUM = #CNT_NUM#
    </select>


    <!--급수전대장상세저장-->
    <update id="updateSplyDtl" parameterClass="GTI.WFMS.Modules.Cnst.Model.SplyDtl">

      UPDATE WTT_SPLY_MA

      <dynamic prepend="set">
        UPD_YMD = SYSDATE
        , UPD_USR = #ID#
        <isNotEmpty property="HJD_CDE" > , HJD_CDE = #HJD_CDE#</isNotEmpty>
        <isNotEmpty property="BEG_YMD" > , BEG_YMD = #BEG_YMD#</isNotEmpty>
        <isNotEmpty property="FNS_YMD" > , FNS_YMD = #FNS_YMD#</isNotEmpty>
        <isNotEmpty property="GVR_AMT" > , GVR_AMT = #GVR_AMT#</isNotEmpty>
        <isNotEmpty property="PRV_AMT" > , PRV_AMT = #PRV_AMT#</isNotEmpty>
        <isNotEmpty property="TAX_AMT" > , TAX_AMT = #TAX_AMT#</isNotEmpty>
        <isNotEmpty property="ROR_AMT" > , ROR_AMT = #ROR_AMT#</isNotEmpty>
        <isNotEmpty property="DEF_AMT" > , DEF_AMT = #DEF_AMT#</isNotEmpty>
        <isNotEmpty property="DFE_AMT" > , DFE_AMT = #DFE_AMT#</isNotEmpty>
        <isNotEmpty property="GFE_AMT" > , GFE_AMT = #GFE_AMT#</isNotEmpty>
        <isNotEmpty property="FFE_AMT" > , FFE_AMT = #FFE_AMT#</isNotEmpty>
        <isNotEmpty property="DIV_AMT" > , DIV_AMT = #DIV_AMT#</isNotEmpty>
        <isNotEmpty property="ETC_AMT" > , ETC_AMT = #ETC_AMT#</isNotEmpty>
        <isNotEmpty property="TOT_AMT" > , TOT_AMT = #TOT_AMT#</isNotEmpty>
        <isNotEmpty property="RCP_YMD" > , RCP_YMD = #RCP_YMD#</isNotEmpty>
        <isNotEmpty property="OPR_NAM" > , OPR_NAM = #OPR_NAM#</isNotEmpty>
        <isNotEmpty property="SVS_NAM" > , SVS_NAM = #SVS_NAM#</isNotEmpty>
        <isNotEmpty property="FNS_NAM" > , FNS_NAM = #FNS_NAM#</isNotEmpty>
        <isNotEmpty property="RCV_NUM" > , RCV_NUM = #RCV_NUM#</isNotEmpty>
        <isNotEmpty property="FCH_NAM" > , FCH_NAM = #FCH_NAM#</isNotEmpty>
        
      </dynamic>

      WHERE CNT_NUM = #CNT_NUM#

    </update>


    <!--급수전대장 추가-->
    <update id="InsertSplyDtl" parameterClass="GTI.WFMS.Modules.Cnst.Model.SplyDtl">
      insert into INFOFMS.WTT_SPLY_MA (
      CNT_NUM,
      BEG_YMD,
      FNS_YMD,
      GVR_AMT,
      PRV_AMT,
      TAX_AMT,
      ROR_AMT,
      DFE_AMT,
      GFE_AMT,
      FFE_AMT,
      DIV_AMT,
      ETC_AMT,
      TOT_AMT,
      RCP_YMD,
      OPR_NAM,
      SUR_NAM,
      FCH_NAM,
      RCV_NUM,
      FNS_NAM,
      SVS_NAM,
      DEF_AMT,
      HJD_CDE,
      CRE_YMD,
      CRE_USR,
      UPD_YMD,
      UPD_USR
      )

      values(
      #CNT_NUM#,
      #BEG_YMD#,
      #FNS_YMD#,
      #GVR_AMT#,
      #PRV_AMT#,
      #TAX_AMT#,
      #ROR_AMT#,
      #DFE_AMT#,
      #GFE_AMT#,
      #FFE_AMT#,
      #DIV_AMT#,
      #ETC_AMT#,
      #TOT_AMT#,
      #RCP_YMD#,
      #OPR_NAM#,
      #SUR_NAM#,
      #FCH_NAM#,
      #RCV_NUM#,
      #FNS_NAM#,
      #SVS_NAM#,
      #DEF_AMT#,
      #HJD_CDE#,
      SYSDATE,
      #ID#,
      SYSDATE,
      #ID#
      )
    </update>

      <!--급수전대장 삭제-->
    <update id="deleteSplyDtl" parameterClass="GTI.WFMS.Modules.Cnst.Model.SplyDtl">
      DELETE FROM WTT_SPLY_MA
      WHERE CNT_NUM = #CNT_NUM#
    </update>

  </statements>
  
</sqlMap>