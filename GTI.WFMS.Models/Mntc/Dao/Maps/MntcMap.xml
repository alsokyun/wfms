<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Main" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ibatis.apache.org/mapping">
  <statements>

    <!--점검목록-->
    <select id="SelectChscMaList"  resultClass="GTI.WFMS.Models.Mntc.Model.ChscMaDtl">
      SELECT A.SCL_NUM
      , A.SCL_CDE
      , C2.NM AS SCL_NM
      , A.SCL_STAT_CDE
      , nvl(C.NM,'점검등록') AS SCL_STAT_NM

      , case when A.SCL_STAT_CDE = 'SCL_STAT_CDE01' then '35495f'
      when A.SCL_STAT_CDE = 'SCL_STAT_CDE02' then '3b81cb'
      when A.SCL_STAT_CDE = 'SCL_STAT_CDE03' then 'fd7e02'
      else '35495f' end AS COLOR

      , A.MNG_CDE,  C3.NM AS MNG_NAM
      , A.TIT_NAM
      , A.STA_YMD
      , A.END_YMD
      , A.CKM_GRP_NM, A.CKM_PEO, A.CHK_CTNT
      , A.CHK_APR_YMD
      , A.CHK_APR_USR
      , A.CHK_CMP_YMD
      , A.CHK_RESULT_YMD
      , U.USER_NM
      , to_char(A.CRE_YMD,'yyyy-mm-dd') CRE_YMD
      , A.CRE_USR
      , to_char(A.UPD_YMD,'yyyy-mm-dd') UPD_YMD
      , A.UPD_USR

      FROM FMS_CHSC_MA A
      LEFT JOIN INFOUSER.CD_DTL_INFO C ON A.SCL_STAT_CDE = C.DTL_CD AND C.MST_CD = (SELECT MST_CD FROM INFOUSER.CD_MST_INFO WHERE ETC = 'SCL_STAT_CDE')
      LEFT JOIN INFOUSER.CD_DTL_INFO C2 ON A.SCL_CDE = C2.DTL_CD AND C2.MST_CD = (SELECT MST_CD FROM INFOUSER.CD_MST_INFO WHERE ETC = 'SCL_CDE')
      LEFT JOIN INFOUSER.SYS_USER_INFO U ON A.CRE_USR = U.USER_ID
      LEFT JOIN INFOUSER.CD_DTL_INFO C3 ON A.MNG_CDE = C3.DTL_CD AND C3.MST_CD = '250101'
      WHERE 1=1
      <isNotEmpty prepend="AND" property="SCL_NUM">
        A.SCL_NUM = #SCL_NUM#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="MNG_CDE">
        A.MNG_CDE LIKE #MNG_CDE#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="SCL_CDE">
        A.SCL_CDE LIKE #SCL_CDE#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="SCL_STAT_CDE">
        A.SCL_STAT_CDE LIKE #SCL_STAT_CDE#
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="TIT_NAM">
        A.TIT_NAM LIKE '%' || #TIT_NAM# || '%'
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="CKM_PEO">
        A.CKM_PEO LIKE '%' || #CKM_PEO# || '%'
      </isNotEmpty>

      <isNotEmpty prepend="AND" property="STA_YMD">
        A.STA_YMD <![CDATA[>=]]> TO_CHAR(TO_DATE(#STA_YMD#, 'yyyy-MM-dd'), 'yyyyMMdd')
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="END_YMD">
        A.END_YMD <![CDATA[<=]]> TO_CHAR(TO_DATE(#END_YMD#, 'yyyy-MM-dd'), 'yyyyMMdd')
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="CHK_YM">
        (
          (A.STA_YMD <![CDATA[>=]]> #CHK_YM# || '01' AND A.STA_YMD <![CDATA[<=]]> #CHK_YM# || '31')
        OR (A.END_YMD <![CDATA[>=]]> #CHK_YM# || '01' AND A.END_YMD  <![CDATA[<=]]> #CHK_YM# || '31')
        )
      </isNotEmpty>

      
    </select>

    <!--점검일정 저장-->
    <update id="SaveChscMaDtl" parameterClass="GTI.WFMS.Models.Mntc.Model.ChscMaDtl">
      MERGE INTO FMS_CHSC_MA
      USING DUAL ON ( SCL_NUM=#SCL_NUM#)

      WHEN MATCHED THEN
      UPDATE
      SET
      UPD_YMD = sysdate
      ,UPD_USR = #ID#
      <isNotEmpty property="SCL_STAT_CDE">
        ,SCL_STAT_CDE = #SCL_STAT_CDE#
      </isNotEmpty>
      <isNotEmpty property="SCL_CDE">
        ,SCL_CDE = #SCL_CDE#
      </isNotEmpty>
      <isNotEmpty property="MNG_CDE">
        ,MNG_CDE = #MNG_CDE#
      </isNotEmpty>
      <isNotEmpty property="TIT_NAM">
        ,TIT_NAM = #TIT_NAM#
      </isNotEmpty>
      <isNotEmpty property="STA_YMD">
        ,STA_YMD = #STA_YMD#
      </isNotEmpty>
      <isNotEmpty property="END_YMD">
        ,END_YMD = #END_YMD#
      </isNotEmpty>
      <isNotEmpty property="CKM_GRP_NM">
        ,CKM_GRP_NM = #CKM_GRP_NM#
      </isNotEmpty>
      <isNotEmpty property="CKM_PEO">
        ,CKM_PEO = #CKM_PEO#
      </isNotEmpty>
      <isNotEmpty property="CHK_CTNT">
        ,CHK_CTNT = #CHK_CTNT#
      </isNotEmpty>

      WHEN NOT MATCHED THEN
      Insert (SCL_NUM, SCL_CDE,SCL_STAT_CDE,MNG_CDE,TIT_NAM,STA_YMD,END_YMD,CKM_GRP_NM,CKM_PEO
      ,CHK_CTNT,CRE_YMD,CRE_USR,UPD_YMD,UPD_USR)
      values(
      (select nvl(max(SCL_NUM),0)+1 from FMS_CHSC_MA)
      , #SCL_CDE#,	'SCL_STAT_CDE01', #MNG_CDE#, #TIT_NAM#
      , #STA_YMD#
      , #END_YMD#
      , #CKM_GRP_NM#
      , #CKM_PEO#, #CHK_CTNT#
      , sysdate, #ID#, sysdate, #ID#)
    </update>


    <!--점검일정 삭제-->
    <update id="DeleteChscMaDtl" parameterClass="GTI.WFMS.Models.Mntc.Model.ChscMaDtl">
      DELETE FROM FMS_CHSC_MA
      WHERE SCL_NUM=#SCL_NUM#
    </update>






    <!-- 점검결과리스트-->
    <select id="SelectChscResultList"  resultClass="Hashtable">
      SELECT R.SCL_NUM
      , R.FTR_CDE, R.FTR_IDN, R.SEQ
      , VN.FTR_NAM
      , R.RPR_YMD
      , R.RPR_CAT_CDE, C.CD_NM RPR_CAT_NM
      , R.RPR_CUZ_CDE, C2.CD_NM RPR_CUZ_NM
      , R.RPR_USR_NM, R.RPR_CTNT
      , V.HJD_CDE, H.HJD_NAM
      , R.FIL_SEQ
      , F.FIL_NM
      , NULL AS CHK
      FROM FMS_CHSC_FTR_RES R
      LEFT JOIN V_FTR V ON R.FTR_CDE = V.FTR_CDE AND R.FTR_IDN = V.FTR_IDN
      LEFT JOIN V_FTR_CDE VN ON R.FTR_CDE = VN.FTR_CDE
      LEFT JOIN CMT_ADAR_MA H ON H.HJD_CDE = V.HJD_CDE
      LEFT JOIN CD_DTL_INFO C ON R.RPR_CAT_CDE = C.DTL_CD
      LEFT JOIN CD_DTL_INFO C2 ON R.RPR_CUZ_CDE = C.DTL_CD
      LEFT JOIN FMS_FILE_MST F ON F.FIL_SEQ = R.FIL_SEQ
      WHERE R.SCL_NUM = #SCL_NUM#
      ORDER BY R.CRE_YMD, R.FTR_CDE, R.FTR_IDN, R.SEQ

    </select>


    <!-- 점검결과 상세 리스트 저장 -->
    <update id="SaveChscResult" parameterClass="Hashtable">
      MERGE INTO FMS_CHSC_FTR_RES
      USING DUAL ON ( SCL_NUM=#SCL_NUM# AND FTR_CDE=#FTR_CDE# AND FTR_IDN=#FTR_IDN# AND SEQ = #SEQ# )

      WHEN MATCHED THEN

      UPDATE  SET
      RPR_YMD			= REPLace(#RPR_YMD#,'-','')
      ,RPR_CAT_CDE	= #RPR_CAT_CDE#
      ,RPR_CUZ_CDE    = #RPR_CUZ_CDE#
      ,RPR_USR_NM     = #RPR_USR_NM#
      ,RPR_CTNT       = #RPR_CTNT#
      ,FIL_SEQ       = #FIL_SEQ#
      ,UPD_YMD        = sysdate
      ,UPD_USR        = #ID#

      WHEN NOT MATCHED THEN
      INSERT
      ( SCL_NUM
      , FTR_CDE
      , FTR_IDN
      , SEQ
      , RPR_YMD
      , RPR_CAT_CDE
      , RPR_CUZ_CDE
      , RPR_USR_NM
      , RPR_CTNT
      , FIL_SEQ
      , CRE_YMD
      , CRE_USR
      , UPD_YMD
      , UPD_USR
      )
      VALUES (
      #SCL_NUM#, #FTR_CDE#, #FTR_IDN#, (select nvl(max(SEQ),0)+1 from FMS_CHSC_FTR_RES where SCL_NUM=#SCL_NUM# AND FTR_CDE=#FTR_CDE# AND FTR_IDN=#FTR_IDN# )
      , REPLace(#RPR_YMD#,'-',''), #RPR_CAT_CDE#, #RPR_CUZ_CDE#, #RPR_USR_NM#, #RPR_CTNT#, #FIL_SEQ#
      , sysdate, #ID#, sysdate, #ID#
      )


    </update>    

    <!-- 점검결과 상세 삭제 -->
    <update id="DeleteChscResult" parameterClass="Hashtable">
      DELETE FMS_CHSC_FTR_RES
      WHERE 1=1
      AND SCL_NUM=#SCL_NUM#
      AND FTR_CDE=#FTR_CDE#
      AND FTR_IDN=#FTR_IDN#
      AND SEQ = #SEQ#
    </update>
    

    <!-- 소모품 사용내역 리스트 -->
    <select id="SelectPdhUseList"  resultClass="Hashtable">
      SELECT H.PDH_HT_NUM, H.PDH_NUM, H.FTR_CDE, H.FTR_IDN, H.SCL_NUM, H.SEQ
      , H.PDH_CNT, H.PDH_AMT
      , P.PDT_NAM
      , P.PDT_MDL_STD
      , NULL AS CHK
      
      FROM FMS_PDJT_HT H
      INNER JOIN FMS_PDJT_MA P ON P.PDH_NUM = H.PDH_NUM
      WHERE 1=1
      AND H.SCL_NUM =#SCL_NUM# 
      AND H.FTR_CDE = #FTR_CDE# 
      AND H.FTR_IDN = #FTR_IDN# 
      AND H.SEQ = #SEQ#
      AND P.PDT_CAT_CDE = #PDT_CAT_CDE#
      ORDER BY H.PDH_HT_NUM
    </select>

    <!-- 소모품내역 삭제 -->
    <update id="DeletePdjtHt" parameterClass="Hashtable">
      DELETE FROM FMS_PDJT_HT
      WHERE 1=1
      AND SCL_NUM=#SCL_NUM#
      AND FTR_CDE=#FTR_CDE#
      AND FTR_IDN=#FTR_IDN#
      AND SEQ = #SEQ#
      AND PDH_HT_NUM = #PDH_HT_NUM#
    </update>


    <!-- 소모품/오일 저장 -->
    <update id="SavePdjtHt" parameterClass="Hashtable">
      MERGE INTO FMS_PDJT_HT
      USING DUAL ON ( PDH_HT_NUM = #PDH_HT_NUM# AND PDH_NUM = #PDH_NUM#  AND SCL_NUM=#SCL_NUM# AND FTR_CDE=#FTR_CDE# AND FTR_IDN=#FTR_IDN# AND SEQ = #SEQ#)

      WHEN MATCHED THEN

      UPDATE  SET
      PDH_CNT = #PDH_CNT#
      , PDH_AMT = #PDH_AMT#
      ,UPD_YMD = sysdate
      ,UPD_USR = #ID#

      WHEN NOT MATCHED THEN
      INSERT
      ( PDH_HT_NUM
      , PDH_NUM, FTR_CDE, FTR_IDN, SCL_NUM, SEQ
      , PDH_CNT, PDH_AMT, CRE_YMD, CRE_USR, UPD_YMD, UPD_USR)
      VALUES (
      (select nvl(max(PDH_HT_NUM),0)+1 from FMS_PDJT_HT)
      , #PDH_NUM#, #FTR_CDE#, #FTR_IDN#, #SCL_NUM#, #SEQ#
      , #PDH_CNT#, #PDH_AMT#
      , sysdate, #ID#, sysdate, #ID#
      )
    </update>


    <!-- 소모품 코드-->
    <select id="SelectPdhList"  resultClass="Hashtable">
      SELECT PDH_NUM, PDT_CAT_CDE, PDT_NAM, PDE_NAM, PDT_MDL_STD, PDT_MNF, PDT_MDL, PDT_UNT
      FROM FMS_PDJT_MA
      WHERE 1=1
      AND PDT_CAT_CDE = #PDT_CAT_CDE#
      AND USE_YN != 'N'
    </select>


    
	<!-- 점검일정 승인-->
	<update id="UpdateChscMaAppr" parameterClass="GTI.WFMS.Models.Mntc.Model.ChscMaDtl">
    UPDATE FMS_CHSC_MA
    SET
    SCL_STAT_CDE = 'SCLT02'
    ,CHK_APR_YMD = to_char(sysdate,'yyyymmdd')
    ,CHK_APR_USR = #ID#
    ,UPD_YMD = sysdate
    ,UPD_USR = #ID#
    WHERE SCL_NUM = #SCL_NUM#
  </update>

    <!-- 점검일정 결과등록-->
    <update id="UpdateChscMaRes">
      UPDATE FMS_CHSC_MA
      SET
      SCL_STAT_CDE = 'SCLT03' /*결과등록*/
      ,CHK_CMP_YMD = to_char(sysdate,'yyyymmdd')
      ,CHK_RESULT_YMD = to_char(sysdate,'yyyymmdd')
      ,UPD_YMD = sysdate
      ,UPD_USR = #ID#
      WHERE SCL_NUM = #SCL_NUM#
    </update>






    <!--FAQ 목록-->
    <select id ="SelectFaqList" parameterClass="Hashtable" resultClass ="Hashtable">

      WITH C AS (
      SELECT COUNT(1) AS ROWCNT
      FROM FAQ A
      LEFT JOIN INFOUSER.CD_DTL_INFO B     ON A.FAQ_CAT_CDE = B.DTL_CD AND B.MST_CD = '250109'
      LEFT JOIN INFOUSER.CD_DTL_INFO D     ON A.FAQ_CUZ_CDE = D.DTL_CD AND D.MST_CD = '250110'
      LEFT JOIN V_FTR_CDE C ON C.FTR_CDE = A.FTR_CDE
      LEFT JOIN INFOUSER.SYS_USER_INFO U ON A.REG_ID = U.USER_ID
      WHERE A.DEL_YN = 'N'


      <isNotEmpty prepend="AND" property="TTL">
        A.TTL LIKE '%' || #TTL# || '%'
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="FAQ_CAT_CDE">
        A.FAQ_CAT_CDE LIKE #FAQ_CAT_CDE#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="FAQ_CUZ_CDE">
        A.FAQ_CUZ_CDE LIKE #FAQ_CUZ_CDE#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="FTR_CDE">
        A.FTR_CDE LIKE #FTR_CDE#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="QUESTION">
        A.QUESTION LIKE '%' || #QUESTION# || '%'
      </isNotEmpty>

      )


      SELECT C.ROWCNT, X.*  FROM (

      SELECT ROW_NUMBER() OVER( ORDER BY A.SEQ ) AS RN
      , A.SEQ
      , A.FAQ_CAT_CDE
      , B.NM AS FAQ_CAT_NM
      , A.FAQ_CUZ_CDE
      , D.NM AS FAQ_CUZ_NM
      ,  A.FTR_CDE, C.FTR_NAM
      , A.TTL
      /*
      , DBMS_LOB.SUBSTR(A.QUESTION, DBMS_LOB.GETLENGTH(A.QUESTION)) AS QUESTION
      , DBMS_LOB.SUBSTR(A.REPL, DBMS_LOB.GETLENGTH(A.REPL)) AS REPL
      */
      , A.READ_CNT
      , A.DEL_YN
      , A.REG_ID
      , U.USER_NM AS REG_NM
      , TO_CHAR( A.REG_DT ,'YYYY-MM-DD') AS REG_DT
      , A.EDT_ID
      , A.EDT_DT
      , ROW_NUMBER()OVER(ORDER BY A.SEQ ) AS ROW_ID
      , ROW_NUMBER()OVER(ORDER BY A.SEQ DESC ) AS ROW_ID2
      FROM FAQ A
      LEFT JOIN INFOUSER.CD_DTL_INFO B     ON A.FAQ_CAT_CDE = B.DTL_CD AND B.MST_CD = '250109'
      LEFT JOIN INFOUSER.CD_DTL_INFO D     ON A.FAQ_CUZ_CDE = D.DTL_CD AND D.MST_CD = '250110'
      LEFT JOIN V_FTR_CDE C ON C.FTR_CDE = A.FTR_CDE
      LEFT JOIN INFOUSER.SYS_USER_INFO U ON A.REG_ID = U.USER_ID
      WHERE A.DEL_YN = 'N'


      <isNotEmpty prepend="AND" property="TTL">
        A.TTL LIKE '%' || #TTL# || '%'
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="FAQ_CAT_CDE">
        A.FAQ_CAT_CDE LIKE #FAQ_CAT_CDE#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="FAQ_CUZ_CDE">
        A.FAQ_CUZ_CDE LIKE #FAQ_CUZ_CDE#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="FTR_CDE">
        A.FTR_CDE LIKE #FTR_CDE#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="QUESTION">
        A.QUESTION LIKE '%' || #QUESTION# || '%'
      </isNotEmpty>
      
      

      ) X JOIN C ON 1=1
      WHERE RN &lt;= ($page$+1) * $rows$
      AND RN &gt;= ($page$) * $rows$ + 1

    </select>


    <!--FAQ 상세-->
    <select id ="SelectFaqDtl" parameterClass="Hashtable" resultClass ="GTI.WFMS.Modules.Mntc.Model.FaqDtl">
      SELECT A.SEQ
      , A.FAQ_CAT_CDE
      , B.NM AS FAQ_CAT_NAM
      , A.FAQ_CUZ_CDE
      , C.NM AS FAQ_CUZ_NAM
      , A.FTR_CDE
      , D.FTR_NAM
      , A.READ_CNT
      , A.DEL_YN
      , A.REG_ID
      , TO_CHAR( A.REG_DT ,'YYYYMMDD') AS REG_DT
      , U.USER_NM
      , A.EDT_ID
      , A.TTL
      ,A.QUESTION
      ,A.REPL
      /*
      , DBMS_LOB.SUBSTR(A.REPL, DBMS_LOB.GETLENGTH(A.REPL)) AS REPL
      , DBMS_LOB.SUBSTR(A.QUESTION, DBMS_LOB.GETLENGTH(A.QUESTION)) AS QUESTION
      */
      , '['|| B.NM ||'] ' || A.TTL AS TTL2
      FROM FAQ A
      LEFT JOIN INFOUSER.SYS_USER_INFO U ON A.REG_ID = U.USER_ID
      LEFT JOIN INFOUSER.CD_DTL_INFO B     ON A.FAQ_CAT_CDE = B.DTL_CD AND B.MST_CD = '250109'
      LEFT JOIN INFOUSER.CD_DTL_INFO C     ON A.FAQ_CUZ_CDE = C.DTL_CD AND C.MST_CD = '250110'
      LEFT JOIN V_FTR_CDE D ON D.FTR_CDE = A.FTR_CDE
      WHERE A.DEL_YN = 'N'

      <isNotEmpty property="SEQ" prepend="AND" >
        A.SEQ = #SEQ#
      </isNotEmpty>
    </select>    
    
    
	<!-- FAQ 저장처리 -->
    <update id="SaveFaqDtl" parameterClass="GTI.WFMS.Modules.Mntc.Model.FaqDtl">
      MERGE INTO FAQ 
      USING DUAL ON (SEQ = #SEQ#)

      WHEN MATCHED THEN
      UPDATE set TTL = #TTL#
      , FTR_CDE = #FTR_CDE#
      , FAQ_CAT_CDE = #FAQ_CAT_CDE#
      , FAQ_CUZ_CDE = #FAQ_CUZ_CDE#
      , QUESTION = #QUESTION#
      , REPL = #REPL#
      , EDT_ID = #ID#
      , EDT_DT = SYSDATE

      WHEN NOT MATCHED THEN
      INSERT( SEQ, FTR_CDE, FAQ_CAT_CDE, FAQ_CUZ_CDE, TTL, QUESTION, REPL, DEL_YN, REG_ID, REG_DT, EDT_ID, EDT_DT )
      VALUES(
      ( SELECT NVL(MAX(SEQ)+1 ,1 ) FROM FAQ )
      , #FTR_CDE#  , #FAQ_CAT_CDE#  , #FAQ_CUZ_CDE#  , #TTL#
      , #QUESTION#
      , #REPL#
      , 'N'    , #ID#
      , SYSDATE  , #ID# , SYSDATE
      )
    </update>
    
	  <!-- FAQ 저장처리 -->
    <update id="SaveFaqDtl_" >
      MERGE INTO FAQ 
      USING DUAL ON (SEQ = #SEQ#)

      WHEN MATCHED THEN
      UPDATE set TTL = #TTL#
      , QUESTION = #QUESTION#
      , REPL = #REPL#

      WHEN NOT MATCHED THEN
      INSERT( SEQ, QUESTION, REPL)
      VALUES(
      ( SELECT NVL(MAX(SEQ)+1 ,1 ) FROM FAQ )
      , #QUESTION#
      , #REPL#
      )
    </update>

    <!--FAQ 삭제처리-->
    <update id="DeleteFaqDtl" parameterClass="GTI.WFMS.Modules.Mntc.Model.FaqDtl">
      DELETE FROM FAQ WHERE SEQ = #SEQ#
    </update>


    <!--<parameterMap id="faqParam" >
      <parameter property="SEQ" classType="string" odbcType="VARCHAR"/>
      <parameter property="QUESTION" classType="string" odbcType="CLOB"/>
      <parameter property="REPL" classType="string" odbcType="CLOB"/>
    </parameterMap>-->

  </statements>
  
</sqlMap>